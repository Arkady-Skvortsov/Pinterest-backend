import { ApiProperty } from '@nestjs/swagger';
import UserEntity from './users.entity';
import {
  Column,
  Entity,
  ManyToMany,
  ManyToOne,
  OneToOne,
  PrimaryGeneratedColumn,
} from 'typeorm';
import { event } from '../dto/notification.dto';

@Entity({ name: 'notification' })
export default class NotificationEntity {
  @ApiProperty({ type: Number, description: 'Autogenerated primary key' })
  @PrimaryGeneratedColumn()
  public id: number;

  @ApiProperty({
    type: String,
    description: 'Text into current notification about some event',
  })
  @Column({ type: 'varchar' })
  public text: string;

  @ApiProperty({
    type: String,
    description: "Type of the event, like: 'Subscribe', 'Like', 'Comment'",
  })
  @Column({ type: 'varchar' })
  public event: event;

  @ApiProperty({
    type: () => UserEntity,
    description: 'Notifications, which has a user',
  })
  @ManyToMany(() => UserEntity, (user) => user.notifications)
  public user: UserEntity;

  @ApiProperty({
    type: () => UserEntity,
    description: 'Author, who has a sender of that notify',
  })
  @OneToOne(() => UserEntity, (user) => user.username)
  public author: UserEntity;
}
